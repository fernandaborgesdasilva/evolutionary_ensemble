end_time,best_fitness_ensemble,ensemble,best_fitness_classifiers
16:02:21,45.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 109}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 129.  50.  67.  50. 126.  50.]"
16:02:21,45.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 109}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 129.  50.  67.  50. 126.  50.]"
16:02:21,45.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 109}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 129.  50.  67.  50. 126.  50.]"
16:02:21,45.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 109}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 129.  50.  67.  50. 126.  50.]"
16:02:21,45.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 109}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 129.  50.  67.  50. 126.  50.]"
16:02:21,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:21,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:21,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:21,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:22,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:23,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:24,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:25,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:26,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:27,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:28,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:29,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:30,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:31,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:32,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:33,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:33,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:33,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:33,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:33,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
16:02:34,46.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=109, p=2,
           weights='uniform'), {'n_neighbors': 109}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 109}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=109,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=109, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 109, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 109}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=109, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 109, 'min_samples_leaf': 1}), (LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[103. 108. 104.  77. 140. 140. 139. 139. 104.  98. 131. 114.  99.  50.
 128.  50.  61.  50. 127. 136.]"
