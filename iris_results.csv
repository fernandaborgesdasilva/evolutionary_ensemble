end_time,best_fitness_ensemble,ensemble,best_fitness_classifiers
16:02:10,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:10,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:10,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:10,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:10,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:11,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,35.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  70.  47. 111.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:12,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:13,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:14,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:15,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:16,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:17,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:18,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:19,36.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 111.  47.  71.  47.  47.  47.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:19,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
16:02:20,37.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=92, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=100, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}))","[113. 110. 109.  47. 100. 100. 101. 101.  47.  47. 113. 117.  82.  47.
 112.  47.  71.  47.  47. 107.]"
