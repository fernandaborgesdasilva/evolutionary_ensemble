end_time,best_fitness_ensemble,ensemble,best_fitness_classifiers
20:18:01,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:02,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:02,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:03,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:03,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:04,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:04,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:04,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:05,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:05,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:06,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:06,42.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  35. 117.  35.
  80.  35. 117.  35. 116. 119. 118.  35. 113. 113. 116. 116. 110. 106.
 107. 103. 113.  93. 103. 113. 115.]"
20:18:06,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:07,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:07,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:08,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:08,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:08,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:09,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:09,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:10,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:10,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:10,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:11,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:11,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:12,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:12,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:13,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:13,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:13,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:14,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:14,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:15,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:15,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:15,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:16,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:16,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:17,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:17,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:17,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:18,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:18,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:19,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:19,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:19,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:20,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:20,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:21,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:21,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:22,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:22,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:22,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:23,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:23,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:23,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:24,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:24,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:25,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:25,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:25,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:26,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:26,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:27,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:27,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:27,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:28,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:28,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:29,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:29,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:30,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:30,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:30,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:31,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:31,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:32,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:32,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:32,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:33,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:33,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:34,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:34,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:34,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:35,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:35,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:36,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:36,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:36,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:37,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:37,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:38,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:38,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:38,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:39,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:39,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:40,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:40,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:40,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:41,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:41,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:42,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
20:18:42,43.0,"[32, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=92, p=2,
           weights='uniform'), {'n_neighbors': 92}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 92}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 92, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 92}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=92,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=92, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 92, 'min_samples_leaf': 92}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[117. 116. 111.  74. 100. 100.  92.  92.  43.  79. 119. 119.  78.  35.
 117.  35.  78.  35. 112.  35. 116. 119. 118.  35. 113. 113. 116. 116.
  98. 107. 115.  96.  97. 107. 114.]"
