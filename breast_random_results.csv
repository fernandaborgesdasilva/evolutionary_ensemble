end_time,best_fitness_ensemble,ensemble,best_fitness_classifiers
20:15:41,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:42,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:43,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:44,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:45,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:47,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:48,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:49,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:50,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:51,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:52,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:53,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:54,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:55,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:56,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:57,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:15:59,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:00,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:01,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:02,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:03,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:04,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:05,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:07,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:08,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:09,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:10,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:11,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:12,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:13,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:14,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:15,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:17,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:18,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:19,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:20,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:21,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:22,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:23,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:24,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:26,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:27,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:28,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:29,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:30,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:31,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:32,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:34,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:35,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:36,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:37,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:38,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:39,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:40,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:41,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:43,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:44,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:45,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:46,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:47,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:48,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:49,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:50,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:51,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:53,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:54,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:55,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:56,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:57,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:58,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:16:59,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:01,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:02,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:03,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:04,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:05,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:06,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:07,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:08,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:09,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:11,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:12,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:13,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:14,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:15,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:17,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:18,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:19,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:20,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:22,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:23,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:24,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:25,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:26,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:27,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:28,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:29,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:30,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:31,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:33,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
20:17:34,177.0,"[654, ((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (GaussianNB(priors=None), {}), (LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
              solver='svd', store_covariance=False, tol=0.0001), {}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}), (BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), {}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=1000, multi_class='ovr', n_jobs=1,
          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (NearestCentroid(metric='euclidean', shrink_threshold=None), {}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1, 'max_iter': 1000}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 100}), (PassiveAggressiveClassifier(C=1000, average=False, class_weight=None,
              fit_intercept=True, loss='hinge', max_iter=1000, n_iter=None,
              n_jobs=1, random_state=None, shuffle=True, tol=None,
              verbose=0, warm_start=False), {'C': 1000, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 1e-05, 'max_iter': 1000}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 100}), (SGDClassifier(alpha=0.01, average=False, class_weight=None, epsilon=0.1,
       eta0=0.0, fit_intercept=True, l1_ratio=0.15,
       learning_rate='optimal', loss='hinge', max_iter=1000, n_iter=None,
       n_jobs=1, penalty='l2', power_t=0.5, random_state=None,
       shuffle=True, tol=None, verbose=0, warm_start=False), {'alpha': 0.01, 'max_iter': 1000}))]","[421. 414. 283. 427. 427. 425. 425. 423. 411. 418. 406. 283. 419. 283.
 319. 283. 422. 283. 424. 432. 432. 283. 431. 431. 437. 437. 403. 385.
 370. 417. 402. 393. 402. 371. 404.]"
