end_time,best_fitness_ensemble,ensemble,best_fitness_classifiers
16:02:35,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:36,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:36,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:36,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:36,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:37,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:37,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:37,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:38,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:38,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:38,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:39,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:39,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:40,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:40,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:40,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:41,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:41,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:42,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:42,180.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 338. 286. 415. 286.]"
16:02:42,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:42,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:43,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:43,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:43,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:44,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:44,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:44,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:45,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:45,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:46,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:46,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:46,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:47,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:47,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:47,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:48,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:48,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:48,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:49,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:49,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:49,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:50,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:50,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:50,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:51,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:51,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:52,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:53,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:53,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:54,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:54,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:54,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:55,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:55,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:55,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:56,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:56,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:57,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:57,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:57,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:58,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:58,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:59,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:59,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:02:59,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:00,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:00,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:00,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:01,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:01,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:01,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:02,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:02,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:03,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:03,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:03,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:04,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:04,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:05,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:05,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:05,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:06,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:06,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:06,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:07,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:07,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:07,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:08,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:08,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:09,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:09,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:09,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:10,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:10,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:10,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:11,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:11,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:11,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
16:03:12,181.0,"((KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 1}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 20}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 30}), (KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=360, p=2,
           weights='uniform'), {'n_neighbors': 360}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 1.0, 'max_iter': 100}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 10}), (RidgeClassifier(alpha=10.0, class_weight=None, copy_X=True,
        fit_intercept=True, max_iter=100, normalize=False,
        random_state=None, solver='auto', tol=0.001), {'alpha': 10.0, 'max_iter': 100}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1, 'gamma': 0.001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.0001}), (SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), {'C': 1000, 'gamma': 0.001}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 1, 'min_samples_leaf': 360}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 1}), (DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=360,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=360, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), {'max_depth': 360, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 1}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 1, 'min_samples_leaf': 360}), (ExtraTreeClassifier(class_weight=None, criterion='gini', max_depth=1,
          max_features='auto', max_leaf_nodes=None,
          min_impurity_decrease=0.0, min_impurity_split=None,
          min_samples_leaf=360, min_samples_split=2,
          min_weight_fraction_leaf=0.0, random_state=None,
          splitter='random'), {'max_depth': 360, 'min_samples_leaf': 360}), (QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
               store_covariance=False, store_covariances=None, tol=0.0001), {}))","[423. 425. 420. 286. 435. 435. 435. 435. 430. 423. 425. 419. 416. 286.
 424. 286. 327. 286. 286. 439.]"
